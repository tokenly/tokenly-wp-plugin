@use '/resources/scss/variables' as *;

.tokenly-token-item-card-list {
	.items {
		position: relative;
	}
}

.tokenly-credit-item-card-list, .tokenly-token-item-card-list {
	.tokenly-loader {
		display: none;
	}
	&.loading {
		.items {
			display: none !important;
		}
		.tokenly-loader {
			display: flex;
			justify-content: center;
		}
	}
	.empty-label {
		display: none;
		opacity: 0.5;
		text-align: center;
		width: 100%
	}
	&.is-empty {
		.empty-label {
			display: block;
		}
	}
	.title-container {
		h2 {
			color: var( --tokenly-color-text );
		}
		hr {
			margin-bottom: 24px;
			opacity: 0.5;
		}
		.options-container {
			display: flex;
			justify-content: space-between;
			.action-container {
				display: grid;
				/* autoprefixer: ignore next */
				grid-auto-flow: column;
				/* autoprefixer: ignore next */
				align-items: center;
				font-size: 28px;
				grid-row-gap: 12px;
				grid-column-gap: 12px;
			}
		}
	}
	.items {
		margin-top: 12px;
	}
	&[ data-style = "grid" ] {
		.items {
			display: grid;
			/* autoprefixer: ignore next */
			grid-auto-flow: row;
			grid-template-columns: repeat(1, minmax(0, 1fr));
			grid-row-gap: 12px;
			grid-column-gap: 12px;
			.component-card-token-item {
				width: 100%;
			}
		}
	}
	&[ data-style = "masonry" ] {
		.items {
			display: grid;
			/* autoprefixer: ignore next */
			grid-auto-flow: row;
			grid-row-gap: 8px;
			grid-column-gap: 8px;
			/* autoprefixer: ignore next */
			grid-auto-rows: 144px;
			grid-template-columns: repeat( 2, 1fr );
		}
	}
	&[ data-style = "list" ] {
		.items {
			display: grid;
			/* autoprefixer: ignore next */
			grid-auto-flow: row;
			grid-template-columns: 1fr;
			.component-card-token-item:last-child {
				border-bottom: none;
			}
		}
	}
	@include md {
		&[ data-style = "grid" ] {
			.items {
				grid-template-columns: repeat(2, minmax(0, 1fr));
			}
		}
		&[ data-style = "masonry" ] {
			.items {
				grid-template-columns: repeat( 4, 1fr );
			}
		}
	}
	@include lg {
		&[ data-style = "grid" ] {
			.items {
				grid-template-columns: repeat(4, minmax(0, 1fr));
			}
		}
		&[ data-style = "masonry" ] {
			.items {
				/* autoprefixer: ignore next */
				grid-auto-rows: 256px;
				grid-row-gap: 32px;
				grid-column-gap: 32px;
				grid-template-columns: repeat( 4, 1fr );
			}
		}
		.title-container {
			.options-container {
				.action-container {
					.style-select {
						i {
							color: #cecece;
							transition: color 0.2s;
							cursor: pointer;
						}
						&:hover {
							i {
								color: #636974;
							}
						}
						&.active {
							i {
								color: var( --tokenly-color-text );
							}
						}
					}
				}
			}
		}
	}
}
